function port-forward-vault {
  kubectl port-forward svc/vault 8200:8202 > /dev/null 2>&1 &
}

function kill-port-forward-vault {
  set +e

  echo "Killing Vault port-forwarding..."
  PID=$(ps aux | grep 'port-forward svc/vault' | grep -v 'grep' | awk '{print $2}')

  { kill $PID && wait $PID; } 2>/dev/null

  set -e
}

function vault-login {
  set +e
  local vault_token=${GITHUB_VAULT_TOKEN}

  vault_pid=$(ps aux | grep 'port-forward svc/vault' | grep -v 'grep' | awk '{print $2}')

  if [ -n vault_pid ]; then
    echo "Port-forwarding Vault..."
    port-forward-vault
  fi

  echo "Logging into Vault..."
  VAULT_SKIP_VERIFY=true vault login -method=github token=${vault_token} >/dev/null 2>&1

  while [ $? != 0 ]; do
    VAULT_SKIP_VERIFY=true vault login -method=github token=${vault_token} >/dev/null 2>&1
  done

  echo "Logged into Vault!"
  set -e
}

function vault_lease_renew {
  vault lease renew -increment 12h $1
}

function kubernetes-creds {
  local environment=${1}
  local role="${2:=operator}"
  vault read -format=json ${environment}/creds/kubernetes-${role} \
    | jq '.data.access_key, .data.secret_key, .data.security_token' -r \
    | paste -d '=' <(echo -en "AWS_ACCESS_KEY_ID\nAWS_SECRET_ACCESS_KEY\nAWS_SESSION_TOKEN\n") - \
    | sed -e 's/^/export /' \
    | sed -e 's/$/;/'
}

function operate {
  eval "$(kubernetes-creds $1 $2)"
}

alias kvf=kill-port-forward-vault
alias vf=port-forward-vault
alias vl=vault-login
alias vr='vault read'
